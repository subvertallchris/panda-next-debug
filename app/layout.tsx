import "./globals.css";
import { css } from "@/styled-system/css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { flex, vstack } from "@/styled-system/patterns";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <div>
          <div>To reproduce the error:</div>
            <ul style={{ padding: '12px' }}>
              <li>
                Open your Activity Monitor or whatever tool you use to watch
                processes
              </li>
              <li>Start next.js via `npm run dev`</li>
              <li>Open your code editor to app/layout.tsx</li>
              <li>
                Break the layout by removing a character from a closing HTML tag
                and saving the file
              </li>
              <li>Fix the error, save the file</li>
              <li>
                Repeat this process of break/fix/break/fix and watch as{" "}
                <span className={css({ fontWeight: 700 })}>
                  next-render-worker-app
                </span>{" "}
                consumes more and more memory
              </li>
              <li>
                Stop your server, disable the PostCSS plugin in{" "}
                <span className={css({ fontWeight: 700 })}>
                  postcss.config.cjs
                </span>
                , remove the hidden{" "}
                <span className={css({ fontWeight: 700 })}>
                  .next directory
                </span>{" "}
                and restart the server. Try to reproduce it. {"You'll"} see the
                process tick up a little bit but not much.
              </li>
            </ul>
          <p>
            It seems to happen faster when you have a larger project. My
            full-time project can go from cold boot to crashed in a few minutes!
            It happens with all saves but seems particularly sensitive to
            errors.
          </p>
        </div>
        <div className={vstack()}>
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
          <HelloRainbow />
        </div>
        <div>{children}</div>
      </body>
    </html>
  );
}

const HelloRainbow = () => {
  return (
    <div className={flex({ gap: "2rem" })}>
      <div className={css({ color: "red" })}>Hello</div>
      <div className={css({ color: "orange" })}>Hello</div>
      <div className={css({ color: "yellow" })}>Hello</div>
      <div className={css({ color: "green" })}>Hello</div>
      <div className={css({ color: "blue" })}>Hello</div>
      <div className={css({ color: "indigo" })}>Hello</div>
      <div className={css({ color: "violet" })}>Hello</div>
    </div>
  );
};
